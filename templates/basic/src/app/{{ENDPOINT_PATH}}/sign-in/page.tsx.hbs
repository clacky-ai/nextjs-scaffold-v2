'use client'

import { useState } from 'react'
import { signIn } from 'next-auth/react'
import { useRouter, useSearchParams } from 'next/navigation'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'

export default function {{pascalCase name}}SignInPage() {
  const router = useRouter()
  const searchParams = useSearchParams()
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault()
    setLoading(true)
    setError('')

    const formData = new FormData(e.currentTarget)
    const {{loginField}} = formData.get('{{loginField}}') as string
    const password = formData.get('password') as string

    try {
      const result = await signIn('{{#if (eq authType 'custom')}}{{name}}-credentials{{else}}credentials{{/if}}', {
        {{loginField}},
        password,
        redirect: false,
      })

      if (result?.error) {
        setError('登录失败，请检查您的凭据')
      } else {
        const redirectUrl = searchParams.get('redirect') || '{{#if useRouteGroup}}/{{defaultPage}}{{else}}{{pathPrefix}}/{{defaultPage}}{{/if}}'
        router.push(redirectUrl)
      }
    } catch (error) {
      setError('登录过程中发生错误')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <Card className="w-full max-w-md">
        <CardHeader className="space-y-1">
          <CardTitle className="text-2xl text-center">{{displayName}}登录</CardTitle>
          <CardDescription className="text-center">
            {{#if (eq name 'customer')}}
            登录您的账户开始购物
            {{else if (eq name 'merchant')}}
            登录管理您的店铺
            {{else}}
            登录管理平台
            {{/if}}
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-2">
              <label htmlFor="{{loginField}}" className="text-sm font-medium">
                {{#if (eq loginField 'email')}}邮箱地址{{else}}用户名{{/if}}
              </label>
              <Input
                id="{{loginField}}"
                name="{{loginField}}"
                type="{{#if (eq loginField 'email')}}email{{else}}text{{/if}}"
                required
                placeholder="请输入{{#if (eq loginField 'email')}}邮箱地址{{else}}用户名{{/if}}"
              />
            </div>
            <div className="space-y-2">
              <label htmlFor="password" className="text-sm font-medium">密码</label>
              <Input
                id="password"
                name="password"
                type="password"
                required
                placeholder="请输入密码"
              />
            </div>
            {error && (
              <div className="text-red-600 text-sm text-center">{error}</div>
            )}
            <Button type="submit" className="w-full" disabled={loading}>
              {loading ? '登录中...' : '登录'}
            </Button>
          </form>
          
          {{#if hasSignUp}}
          <div className="mt-4 text-center text-sm">
            还没有账户？{' '}
            <a href="{{#if useRouteGroup}}/sign-up{{else}}{{pathPrefix}}/sign-up{{/if}}" className="text-blue-600 hover:underline">
              立即注册
            </a>
          </div>
          {{/if}}
        </CardContent>
      </Card>
    </div>
  )
}