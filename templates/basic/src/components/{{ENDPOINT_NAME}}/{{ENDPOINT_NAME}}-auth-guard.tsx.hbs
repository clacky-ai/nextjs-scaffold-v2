'use client'

import { useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { useSession } from 'next-auth/react'

interface {{pascalCase name}}AuthGuardProps {
  children: React.ReactNode
  fallback?: React.ReactNode
}

export function {{pascalCase name}}AuthGuard({ children, fallback }: {{pascalCase name}}AuthGuardProps) {
  const router = useRouter()
  const { data: session, status } = useSession()

  useEffect(() => {
    if (status === 'loading') return

    if (!session) {
      router.push('{{#if useRouteGroup}}/sign-in{{else}}{{pathPrefix}}/sign-in{{/if}}')
    }
  }, [session, status, router])

  if (status === 'loading') {
    return (
      fallback || (
        <div className="min-h-screen flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto"></div>
            <p className="mt-2 text-gray-600">加载中...</p>
          </div>
        </div>
      )
    )
  }

  if (!session) {
    return fallback || null
  }

  return <>{children}</>
}