{{#if hasSidebar}}
'use client'

import Link from 'next/link'
import { usePathname } from 'next/navigation'
import { signOut } from 'next-auth/react'
import { Button } from '@/components/ui/button'
import { {{camelCase name}}NavigationStore } from '@/stores/{{name}}'

export function {{pascalCase name}}Sidebar() {
  const pathname = usePathname()
  const { navigationItems, sidebarOpen, toggleSidebar } = {{camelCase name}}NavigationStore()

  return (
    <>
      {/* 移动端遮罩 */}
      {sidebarOpen && (
        <div 
          className="fixed inset-0 bg-gray-600 bg-opacity-50 lg:hidden z-20"
          onClick={toggleSidebar}
        />
      )}

      {/* 侧边栏 */}
      <div className={`
        fixed inset-y-0 left-0 z-30 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out
        lg:translate-x-0 lg:static lg:inset-0
        ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'}
      `}>
        <div className="flex items-center justify-between h-16 px-4 border-b">
          <h2 className="text-xl font-semibold text-gray-800">
            {{displayName}}
          </h2>
          <Button
            variant="ghost"
            size="sm"
            onClick={toggleSidebar}
            className="lg:hidden"
          >
            ✕
          </Button>
        </div>

        <nav className="mt-5 px-2">
          <div className="space-y-1">
            {navigationItems.map((item) => {
              const isActive = pathname === item.path
              return (
                <Link
                  key={item.id}
                  href={item.path}
                  className={`
                    group flex items-center px-2 py-2 text-base font-medium rounded-md transition-colors
                    ${isActive
                      ? 'bg-blue-100 text-blue-700'
                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'
                    }
                  `}
                >
                  <span className="flex-1">{item.label}</span>
                  {item.badge && (
                    <span className="ml-3 inline-block py-0.5 px-2 text-xs bg-red-100 text-red-800 rounded-full">
                      {item.badge}
                    </span>
                  )}
                </Link>
              )
            })}
          </div>
        </nav>

        {/* 底部操作 */}
        <div className="absolute bottom-0 left-0 right-0 p-4 border-t">
          <Button
            variant="outline"
            className="w-full"
            onClick={() => signOut({ callbackUrl: '{{#if useRouteGroup}}/sign-in{{else}}{{pathPrefix}}/sign-in{{/if}}' })}
          >
            退出登录
          </Button>
        </div>
      </div>
    </>
  )
}
{{else}}
// {{displayName}}不需要侧边栏组件
export function {{pascalCase name}}Sidebar() {
  return null
}
{{/if}}